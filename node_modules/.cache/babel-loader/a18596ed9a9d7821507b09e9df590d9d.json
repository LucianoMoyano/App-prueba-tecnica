{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lucianomoyano/Escritorio/prueba-tecnica-react/src/components/Button/index.js\";\nimport React from \"react\";\nimport styles from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\nexport const Button = ({\n  children,\n  icon,\n  option,\n  onclick\n}) => {\n  let classname = styles[option];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: icon ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classname,\n      onClick: onclick,\n      children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classname,\n      onClick: onclick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  icon: PropTypes.element,\n  option: PropTypes.string,\n  onclick: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/lucianomoyano/Escritorio/prueba-tecnica-react/src/components/Button/index.js"],"names":["React","styles","PropTypes","Button","children","icon","option","onclick","classname","propTypes","node","isRequired","element","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAC7D,MAAIC,SAAS,GAAGP,MAAM,CAACK,MAAD,CAAtB;AACA,sBACE;AAAA,cACGD,IAAI,gBACH;AAAQ,MAAA,SAAS,EAAEG,SAAnB;AAA8B,MAAA,OAAO,EAAED,OAAvC;AAAA,iBACGH,QADH,eAEE;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAMH;AAAQ,MAAA,SAAS,EAAEG,SAAnB;AAA8B,MAAA,OAAO,EAAED,OAAvC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AAPJ,mBADF;AAcD,CAhBM;KAAMD,M;AAkBbA,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,QAAQ,EAAEF,SAAS,CAACQ,IAAV,CAAeC,UADR;AAEjBN,EAAAA,IAAI,EAAEH,SAAS,CAACU,OAFC;AAGjBN,EAAAA,MAAM,EAAEJ,SAAS,CAACW,MAHD;AAIjBN,EAAAA,OAAO,EAAEL,SAAS,CAACY;AAJF,CAAnB","sourcesContent":["import React from \"react\"\nimport styles from \"./Button.module.css\"\nimport PropTypes from \"prop-types\"\n\nexport const Button = ({ children, icon, option, onclick }) => {\n  let classname = styles[option]\n  return (\n    <>\n      {icon ? (\n        <button className={classname} onClick={onclick}>\n          {children}\n          <span>{icon}</span>\n        </button>\n      ) : (\n        <button className={classname} onClick={onclick}>\n          {children}\n        </button>\n      )}\n    </>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  icon: PropTypes.element,\n  option: PropTypes.string,\n  onclick: PropTypes.func,\n}\n"]},"metadata":{},"sourceType":"module"}